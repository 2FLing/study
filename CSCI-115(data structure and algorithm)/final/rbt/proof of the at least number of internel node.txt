when black high is 0, then 2^bh(x) - 1 = 2^0 -1 = 0
assume the height of the tree is greater than 0, and for
each node the black height is either bh(x) or bh(x) - 1
then for each node, the black height is at lease bh(x) - 1
then for the whole tree, there will be (2^(bh(x)-1) - 1) + (2^(bh(x)-1)-1) + 1 = 2^(bh(x)-1)
therefore, if the height of the tree is h, than the black height is at lease h/2
therefore, n>= 2^(h/2)-1, n+1 >= 2^(h/2), then lg(n+1)>=h/2, h<= 2lg(n+1).
Due to the time complexity for the operations of red black tree is O(h), the exact time complexity is
O(lgn) 
